name: Deploy Frontend to S3

on:
  push:
    branches: [main]
    paths: ["apps/web/**"]

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "apps/web/package-lock.json"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install dependencies
        working-directory: apps/web
        run: npm ci

      - name: Build and export Next.js app
        working-directory: apps/web
        env:
          NEXT_PUBLIC_API_BASE_URL: ${{ secrets.API_BASE_URL }}
        run: |
          echo "🏗️ Building Next.js app..."
          npm run build
          echo "📦 Static files exported to 'out' directory"

      - name: Sync to S3
        run: |
          echo "☁️ Syncing to S3..."
          aws s3 sync apps/web/out/ s3://stepexplorer-frontend-9i8w0q8o --delete --exact-timestamps
          echo "✅ Files synced to S3"

      - name: Get CloudFront Distribution ID
        id: cloudfront
        run: |
          # Get distribution ID by domain name
          DISTRIBUTION_ID=$(aws cloudfront list-distributions \
            --query "DistributionList.Items[?Aliases.Items && contains(Aliases.Items, 'stepexplorer.com')].Id" \
            --output text)

          if [ "$DISTRIBUTION_ID" = "" ] || [ "$DISTRIBUTION_ID" = "None" ]; then
            # Fallback: get by origin (S3 bucket)
            DISTRIBUTION_ID=$(aws cloudfront list-distributions \
              --query "DistributionList.Items[?Origins.Items[0].DomainName=='stepexplorer-frontend-9i8w0q8o.s3.us-east-1.amazonaws.com'].Id" \
              --output text)
          fi

          echo "distribution_id=$DISTRIBUTION_ID" >> $GITHUB_OUTPUT
          echo "📡 Found CloudFront Distribution: $DISTRIBUTION_ID"

      - name: Invalidate CloudFront
        if: steps.cloudfront.outputs.distribution_id != '' && steps.cloudfront.outputs.distribution_id != 'None'
        run: |
          echo "🔄 Invalidating CloudFront cache..."
          aws cloudfront create-invalidation \
            --distribution-id ${{ steps.cloudfront.outputs.distribution_id }} \
            --paths "/*"
          echo "✅ CloudFront cache invalidated"

      - name: Display deployment URLs
        run: |
          echo "🚀 Frontend deployed successfully!"
          echo "📱 CloudFront URL: https://dy4dywaqklyn2.cloudfront.net"
          echo "🌐 Domain: https://stepexplorer.com"
          echo "🪣 S3 Direct: https://stepexplorer-frontend-9i8w0q8o.s3-website-us-east-1.amazonaws.com"
